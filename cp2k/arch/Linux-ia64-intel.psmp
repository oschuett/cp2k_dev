# by default some intel compilers put temporaries on the stack
# this might lead to segmentation faults if the stack limit is set to low
# stack limits can be increased by sysadmins or e.g with ulimit -s 256000
# Tested on a HPC non-Itanium clusters @ UDS (France)
# Note: -O2 produces an executable which is slightly faster than -O3
# and the compilation time was also much shorter.
CC       = icc
CPP      = /lib/cpp
FC       = mpif90 -FR
FC_fixed = mpif90 -FI
LD       = mpif90
AR       = /usr/bin/ar -r
#Better with mkl (intel lapack/blas) only
DFLAGS   = -D__INTEL -D__FFTSG -D__parallel 
#If you want to use BLACS and SCALAPACK use the flags below
#DFLAGS   = -D__INTEL -D__FFTSG -D__parallel -D__BLACS -D__SCALAPACK
CPPFLAGS = -C $(DFLAGS) -P -traditional
FCFLAGS  = -O2 -i-static -openmp -heap-arrays 64 -Vaxlib
LDFLAGS  = $(FCFLAGS) -L$(HOME)/lib -L/opt/intel/mkl-10.1.0.015/lib/em64t
LIBS     = -lmkl -lm -lpthread -lguide -openmp
#If you want to use BLACS and SCALAPACK use the libraries below
#LIBS     = -lmkl -lmkl_blacs_openmpi_lp64 -lmkl_scalapack_lp64 -lm -lpthread -lguide -openmp

OBJECTS_ARCHITECTURE = machine_intel.o
