
How to compile CP2K code
========================

 1) Acquire the code:

    see http://cp2k.berlios.de/
    The preferred method is to download it from the CVS
    (just use <Enter> if a password is asked for).

    cd $HOME
    touch $HOME/.cvspass
    cvs -d:pserver:anonymous@cvs.cp2k.berlios.de:/cvsroot/cp2k login
    cvs -z3 -d:pserver:anonymous@cvs.cp2k.berlios.de:/cvsroot/cp2k co cp2k

    if cvs is not installed on your system get it at http://www.nongnu.org/cvs/

 2a) gnu make should be on your system (gmake or make on linux) and used for the build, 
     go to http://www.gnu.org/software/make/make.html 
     download from http://ftp.gnu.org/pub/gnu/make/

 2b) an f95 compiler, BLAS and LAPACK should be installed
     (use the latest versions available, download all patches)
     http://www.netlib.org/blas/
     http://www.netlib.org/lapack/ (see also http://www.netlib.org/lapack-dev/)
     http://math-atlas.sourceforge.net/
     http://www.tacc.utexas.edu/resources/software/ (GotoBLAS)
     using vendor provided libraries can make a very significant difference (e.g. mkl, essl)

 2c) MPI and SCALAPACK are needed for parallel runs
     (use the latest versions available, download all patches !!)
     http://www-unix.mcs.anl.gov/mpi/mpich/
     http://www.netlib.org/scalapack/ (see also http://www.netlib.org/lapack-dev/)

 2d) fftw can be used to improve FFT speed (depending on architecture)
     the current version of the code works with FFTW 2.X or FFTW 3.X (use -D__FFTW2 *or* -D__FFTW3)
     http://www.fftw.org/

 2e) Hartree-Fock exchange (optional) requires the libint package to be installed, and a Fortran compiler that
     supports ISO_C_BINDING and Fortran procedure pointers (g95, xlf90 ?) (use -D__LIBINT). 
     Tested against libinit-1.1.2, and currently hardcoded to the default angular momentum LIBINT_MAX_AM 5
     (check your include/libint/libint.h to see if it matches)
     http://www.chem.vt.edu/chem-dept/valeev/software/libint/libint.html

 3) to compile the code:

 3a) You will need to make sure that the architecture dependent file (settings such as the compiler name 
     and library locations) is set up correctly. To do that, execute
     > ~/cp2k/tools/get_arch_code
     and modify ~/cp2k/arch/<result of get_arch_code>.* (or possible first rename a close match) to 
     the correct values for your system.

     some notes (in addition to the file ~/cp2k/arch/README):

     - ~/cp2k/arch/*.* files have paths to libraries hard-wired 
        (e.g. blass, lapack, ...) so these will most likely need modification.

     -  be sure to remove __FFTWx if you don not have the library installed. __FFTSG 
        should always there. 

     - if ~/cp2k/tools/get_arch_code returns an unknown for the architecture
       try to have it return the closest possible match.
       have a look in ~/cp2k/arch for the possible options (or see step 7)
       different compilers (e.g. INTEL ifort, PGI pgf90, NAG f95, g95, ...) can be selected using the
       env variable 'FORT_C_NAME' e.g.
       > export FORT_C_NAME=g95
       or 
       > setenv FORT_C_NAME g95
       as this will change what get_arch_code returns

 3b) actually compile the code

    > cd cp2k/makefiles; make sopt
    or 
    > cd cp2k/makefiles; make popt 

    "p" stands for parallel (alternatively "s" = serial)
    "opt" means to buil an optimised version (alternatively "dbg" = debugging)
    (make stands for GNU make)

 4) If things fail, take a break... and go back to 3a

 5) If your machine is really not there, it shouldn't be too difficult to add.
    Only ~/cp2k/src/machine*.F should be affected.

 6) If compilation works fine, you can run one of the test cases 
    to try out the executable

>  cd ~/cp2k/tests/QS/
> ~/cp2k/exe/YOURMACHINE/cp2k.sopt H2O.inp

 6b) you could have a look in ~/cp2k/doc if your run fails

 7) In any case please tell us your comments, praise, criticism, thanks, ...

    you can sent email to the people in the team :

    http://developer.berlios.de/project/memberlist.php?group_id=129

 8) Happy computing!

 the cp2k team.
