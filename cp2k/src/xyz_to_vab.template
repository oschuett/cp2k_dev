! *****************************************************************************
    SUBROUTINE xyz_to_vab_@<la_max_local>@_@<lb_max_local>@

    !INTEGER :: my_rank,ierror
    !REAL(kind=dp) :: alpha(0:(@<la_max_local>@+@<lb_max_local>@),0:@<la_max_local>@,0:@<lb_max_local>@,3)

    INTEGER :: ico,jco,lxa,lxb,lxp,lxyz,lyp,lzp
    REAL(KIND=dp) :: a,b,binomial_k_lxa,binomial_l_lxb

    REAL(kind=dp) :: alpha_1(0:(@<la_max_local>@+@<lb_max_local>@),0:@<la_max_local>@,0:@<lb_max_local>@)
    REAL(kind=dp) :: alpha_2(0:(@<la_max_local>@+@<lb_max_local>@),0:@<la_max_local>@,0:@<lb_max_local>@)
    REAL(kind=dp) :: alpha_3(0:(@<la_max_local>@+@<lb_max_local>@),0:@<la_max_local>@,0:@<lb_max_local>@)
<$--(if (la_max_local == 0) and (lb_max_local==0))-->
!    REAL(kind=dp) :: coef_ttz, coef_tyz
<$--(else)-->
    REAL(kind=dp) :: coef_ttz(0:@<la_max_local>@,0:@<lb_max_local>@)
    REAL(kind=dp) :: coef_tyz(0:@<la_max_local>@,0:@<lb_max_local>@,0:@<la_max_local>@,0:@<lb_max_local>@)
<$--(end)-->
    coef_xyz=coef_xyz*prefactor
!   *** initialise the coefficient matrix, we transform the sum
!
!   sum_{lxa,lya,lza,lxb,lyb,lzb} P_{lxa,lya,lza,lxb,lyb,lzb} (x-a_x)**lxa (y-a_y)**lya (z-a_z)**lza (x-b_x)**lxb (y-a_y)**lya (z-a_z)**lza
!
!   into
!
!   sum_{lxp,lyp,lzp} P_{lxp,lyp,lzp} (x-p_x)**lxp (y-p_y)**lyp (z-p_z)**lzp
!
!   where p is center of the product gaussian, and lp = la_max_local + lb_max_local
!   (current implementation is l**7)
!
!
!   compute polynomial expansion coefs -> (x-a)**lxa (x-b)**lxb -> sum_{ls} alpha(ls,lxa,lxb,1)*(x-p)**ls
!
!   *** make the alpha matrix ***
  !RR    DO iaxis=1,3
<$--(if (la_max_local == 0) and (lb_max_local==0))-->
    !alpha_1(0,0,0)=1.0_dp
    !alpha_2(0,0,0)=1.0_dp
    !alpha_3(0,0,0)=1.0_dp
<$--(else)-->
  alpha_1(:,:,:)=0.0_dp
  alpha_2(:,:,:)=0.0_dp
  alpha_3(:,:,:)=0.0_dp

  <$--(for iaxis in range(1,3+1))-->
   <$--(for lxa in range(0,la_max_local+1))-->
     <$--(for lxb in range(0,lb_max_local+1))-->
         binomial_k_lxa=1.0_dp
         a=1.0_dp
       <$--(for k in range(0,lxa+1))-->
         ! DO k=0,lxa
          binomial_l_lxb=1.0_dp
          b=1.0_dp
         <$--(for l in range(0,lxb+1))-->
          ! DO l=0,lxb
             alpha_@<iaxis>@(@<lxa-l+lxb-k>@,@<lxa>@,@<lxb>@)=alpha_@<iaxis>@(@<lxa-l+lxb-k>@,@<lxa>@,@<lxb>@)+ &
                               binomial_k_lxa*binomial_l_lxb*a*b
             <$--(if (lxb-l) == 0)-->
                 ! Removed here as lxb - l = 0
             <$--(elif (lxb-l) == (l+1))-->
                 ! binomial_l_lxb=binomial_l_lxb*1
                 b=b*(rp(@<iaxis>@)-(ra(@<iaxis>@)+rab(@<iaxis>@)))
             <$--(elif (l+1) == 1)-->
                 binomial_l_lxb=binomial_l_lxb*REAL(@<lxb-l>@,dp)
                 b=b*(rp(@<iaxis>@)-(ra(@<iaxis>@)+rab(@<iaxis>@)))
             <$--(else)-->
                 binomial_l_lxb=binomial_l_lxb*REAL(@<lxb-l>@,dp)/REAL(@<l+1>@,dp)
                 b=b*(rp(@<iaxis>@)-(ra(@<iaxis>@)+rab(@<iaxis>@)))
             <$--(end)-->
          !ENDDO
         <$--(end)-->
          <$--(if (lxa-k) == 0)-->
             ! Removed  here as lxa-k == 0
          <$--(elif (lxa-k) == (k+1))-->
          a=a*(-ra(@<iaxis>@)+rp(@<iaxis>@))
          <$--(elif (k+1) == 1)-->
             binomial_k_lxa=binomial_k_lxa*REAL(@<lxa-k>@,dp)
             a=a*(-ra(@<iaxis>@)+rp(@<iaxis>@))
          <$--(else)-->
          binomial_k_lxa=binomial_k_lxa*REAL(@<lxa-k>@,dp)/REAL(@<k+1>@,dp)
          a=a*(-ra(@<iaxis>@)+rp(@<iaxis>@))
          <$--(end)-->
         ! ENDDO
       <$--(end)-->
     <$--(end)-->
   <$--(end)-->
  <$--(end)-->
  !RR    ENDDO 
<$--(end)-->
    !
    !   compute v_{lxa,lya,lza,lxb,lyb,lzb} given v_{lxp,lyp,lzp} and alpha(ls,lxa,lxb,1)
    !   use a three step procedure
    !

<$--(if (la_max_local+lb_max_local) == 0)-->
       !coef_tyz=0.0_dp
          !coef_ttz=0.0_dp
             !   coef_ttz=0.0_dp+coef_xyz(1)*1.0_dp
             !   coef_tyz=0.0_dp+coef_ttz*1.0_dp
             !DO lxb=MAX(lb_min_local,0),0
             jco=1 ! coset(0,0,0)
             !DO lxa=MAX(la_min_local,0),0
                ico=1 ! coset(0,0,0)
                vab(ico,jco)=vab(ico,jco)+coef_xyz(1)
             !ENDDO
             !ENDDO
<$--(elif (la_max_local+lb_max_local) == 1)-->
    lxyz=0
!   DO lzp=0,@<la_max_local>@+@<lb_max_local>@
 <$--(for lzp in range(0,la_max_local+lb_max_local+1))-->
       coef_tyz=0.0_dp
       DO lyp=0,@<la_max_local>@+@<lb_max_local>@-@<lzp>@
          coef_ttz=0.0_dp
          DO lxp=0,@<la_max_local>@+@<lb_max_local>@-@<lzp>@-lyp
             lxyz=lxyz+1
    <$--(for lxb in range(0,lb_max_local+1))-->
     <$--(for lxa in range(0,la_max_local+1))-->
                coef_ttz(@<lxa>@,@<lxb>@)=coef_ttz(@<lxa>@,@<lxb>@)+coef_xyz(lxyz)*alpha_1(lxp,@<lxa>@,@<lxb>@)
     <$--(end)-->
    <$--(end)-->
          ENDDO

     ! Improve locality
     !temp(:,:) = alpha(lyp,0:@<la_max_local>@,0:@<lb_max_local>@,2)
     ! RR do lyb = 0, lb_max_local
  <$--(for lyb in range(0,lb_max_local+1))-->
     ! RR do lya = 0, la_max_local
    <$--(for lya in range(0,la_max_local+1))-->
             !DO lxb=0,@<lb_max_local>@-lyb
      <$--(for lxb in range(0,lb_max_local-lyb+1))-->
             !DO lxa=0,@<la_max_local>@-lya
         <$--(for lxa in range(0,la_max_local-lya+1))-->
                coef_tyz(@<lxa>@,@<lxb>@,@<lya>@,@<lyb>@)=coef_tyz(@<lxa>@,@<lxb>@,@<lya>@,@<lyb>@)+coef_ttz(@<lxa>@,@<lxb>@)*alpha_2(lyp,@<lya>@,@<lyb>@)
         <$--(end)-->
             !ENDDO
      <$--(end)-->
             !ENDDO
  ! RR enddo
    <$--(end)-->

  ! RR enddo
  <$--(end)-->
       ENDDO


  <$--(for lzb in range(0,lb_max_local+1))-->
     <$--(for lza in range(0,la_max_local+1))-->
          !DO lyb=0,@<lb_max_local>@-lzb
        <$--(for lyb in range(0,lb_max_local-lzb+1))-->
          !DO lya=0,@<la_max_local>@-lza
         <$--(for lya in range(0,la_max_local-lza+1))-->
            <$--(if (lb_max_local-lzb-lyb) > 0)-->
             <$--(if (lzb+lyb)==0)-->
              DO lxb=lb_min_local,@<lb_max_local>@
             <$--(else)-->
              DO lxb=MAX(lb_min_local-@<lzb>@-@<lyb>@,0),@<lb_max_local-lzb-lyb>@
             <$--(end)-->
             jco=coset(lxb,@<lyb>@,@<lzb>@)
            <$--(else)-->
             lxb = 0
             !jco=coset(0,@<lyb>@,@<lzb>@)
             jco=@<(lyb+lzb)*(lyb+lzb+1)*(lyb+lzb+2)/6+1+(lyb+lzb)*(lyb+lzb+1)/2+lzb>@
            <$--(end)-->

            <$--(if (la_max_local-lza-lya) > 0)-->
             <$--(if (lza+lya == 0))-->
              DO lxa=la_min_local,@<la_max_local>@
             <$--(else)-->
              DO lxa=MAX(la_min_local-@<lza>@-@<lya>@,0),@<la_max_local - lza - lya>@
             <$--(end)-->
                ico=coset(lxa,@<lya>@,@<lza>@)
            <$--(else)-->
                lxa = 0
                !ico=coset(0,@<lya>@,@<lza>@)
                ico=@<(lya+lza)*(lya+lza+1)*(lya+lza+2)/6+1+(lya+lza)*(lya+lza+1)/2+lza>@
            <$--(end)-->

                vab(ico,jco)=vab(ico,jco)+coef_tyz(lxa,lxb,@<lya>@,@<lyb>@)*alpha_3(@<lzp>@,@<lza>@,@<lzb>@)

            <$--(if (la_max_local-lza-lya) > 0)-->
             ENDDO
            <$--(end)-->

            <$--(if (lb_max_local-lzb-lyb) > 0)-->
             ENDDO
            <$--(end)-->
          !ENDDO
          !ENDDO
         <$--(end)-->
        <$--(end)-->
     <$--(end)-->
  <$--(end)-->

!  ENDDO
 <$--(end)-->
<$--(else)-->
    lxyz=0
    DO lzp=0,@<la_max_local>@+@<lb_max_local>@
       coef_tyz=0.0_dp
       DO lyp=0,@<la_max_local>@+@<lb_max_local>@-lzp
          coef_ttz=0.0_dp
          DO lxp=0,@<la_max_local>@+@<lb_max_local>@-lzp-lyp
             lxyz=lxyz+1
    <$--(for lxb in range(0,lb_max_local+1))-->
     <$--(for lxa in range(0,la_max_local+1))-->
                coef_ttz(@<lxa>@,@<lxb>@)=coef_ttz(@<lxa>@,@<lxb>@)+coef_xyz(lxyz)*alpha_1(lxp,@<lxa>@,@<lxb>@)
     <$--(end)-->
    <$--(end)-->
          ENDDO

     ! Improve locality
     !temp(:,:) = alpha(lyp,0:@<la_max_local>@,0:@<lb_max_local>@,2)
     ! RR do lyb = 0, lb_max_local
  <$--(for lyb in range(0,lb_max_local+1))-->
     ! RR do lya = 0, la_max_local
    <$--(for lya in range(0,la_max_local+1))-->
             !DO lxb=0,@<lb_max_local>@-lyb
      <$--(for lxb in range(0,lb_max_local-lyb+1))-->
             !DO lxa=0,@<la_max_local>@-lya
         <$--(for lxa in range(0,la_max_local-lya+1))-->
                coef_tyz(@<lxa>@,@<lxb>@,@<lya>@,@<lyb>@)=coef_tyz(@<lxa>@,@<lxb>@,@<lya>@,@<lyb>@)+coef_ttz(@<lxa>@,@<lxb>@)*alpha_2(lyp,@<lya>@,@<lyb>@)
         <$--(end)-->
             !ENDDO
      <$--(end)-->
             !ENDDO
  ! RR enddo
    <$--(end)-->

  ! RR enddo
  <$--(end)-->
       ENDDO


  <$--(for lzb in range(0,lb_max_local+1))-->
     <$--(for lza in range(0,la_max_local+1))-->
          !DO lyb=0,@<lb_max_local>@-lzb
        <$--(for lyb in range(0,lb_max_local-lzb+1))-->
          !DO lya=0,@<la_max_local>@-lza
         <$--(for lya in range(0,la_max_local-lza+1))-->
            <$--(if (lb_max_local-lzb-lyb) > 0)-->
             <$--(if (lzb+lyb)==0)-->
              DO lxb=lb_min_local,@<lb_max_local>@
             <$--(else)-->
              DO lxb=MAX(lb_min_local-@<lzb>@-@<lyb>@,0),@<lb_max_local-lzb-lyb>@
             <$--(end)-->
             jco=coset(lxb,@<lyb>@,@<lzb>@)
            <$--(else)-->
             lxb = 0
             !jco=coset(0,@<lyb>@,@<lzb>@)
             jco=@<(lyb+lzb)*(lyb+lzb+1)*(lyb+lzb+2)/6+1+(lyb+lzb)*(lyb+lzb+1)/2+lzb>@
            <$--(end)-->

            <$--(if (la_max_local-lza-lya) > 0)-->
             <$--(if (lza+lya == 0))-->
              DO lxa=la_min_local,@<la_max_local>@
             <$--(else)-->
              DO lxa=MAX(la_min_local-@<lza>@-@<lya>@,0),@<la_max_local - lza - lya>@
             <$--(end)-->

                ico=coset(lxa,@<lya>@,@<lza>@)
            <$--(else)-->
                lxa = 0
                !ico=coset(0,@<lya>@,@<lza>@)
                ico=@<(lya+lza)*(lya+lza+1)*(lya+lza+2)/6+1+(lya+lza)*(lya+lza+1)/2+lza>@
            <$--(end)-->

                vab(ico,jco)=vab(ico,jco)+coef_tyz(lxa,lxb,@<lya>@,@<lyb>@)*alpha_3(lzp,@<lza>@,@<lzb>@)

            <$--(if (la_max_local-lza-lya) > 0)-->
             ENDDO
            <$--(end)-->

            <$--(if (lb_max_local-lzb-lyb) > 0)-->
             ENDDO
            <$--(end)-->

          !ENDDO
          !ENDDO
         <$--(end)-->
        <$--(end)-->
     <$--(end)-->
  <$--(end)-->

   ENDDO
<$--(end)-->

    END SUBROUTINE xyz_to_vab_@<la_max_local>@_@<lb_max_local>@


