!-----------------------------------------------------------------------------!
!   CP2K: A general program to perform molecular dynamics simulations         !
!   Copyright (C) 2000 - 2007  CP2K developers group                          !
!-----------------------------------------------------------------------------!


!!****** cp2k/lazy [1.0] *
!!
!!   NAME
!!     lazy
!!
!!   FUNCTION
!!     Filters for interpolating scaling functions .
!!
!!   AUTHOR
!!      Florian Schiffmann (09.2007,fschiff)
!!
!!   MODIFICATION HISTORY
!!
!!   SOURCE
!******************************************************************************

MODULE lazy

  USE kinds,                           ONLY: dp

#include "cp_common_uses.h"
  IMPLICIT NONE

  PRIVATE

  CHARACTER(len=*), PARAMETER, PRIVATE :: moduleN = 'ps_wavelet_types'

! *** Public data types ***
  
  PUBLIC :: lazy_arrays

CONTAINS
!***************************************************************************
!!*****  cp2k/lazy_arrays [1.0] *
!!
!!   NAME
!!     lazy_arrays
!!
!!   FUNCTION
!!
!!   NOTES
!!     -
!!
!!   ATTRIBUTES
!!
!!   AUTHOR
!!     fschiff
!!
!!   MODIFICATION HISTORY
!!     09.2007 created [Florian Schiffmann]
!!
!***************************************************************************
  
  SUBROUTINE lazy_arrays(itype,m,ch,cg,cgt,cht)
    INTEGER,INTENT(in)                          ::   m,itype
    REAL(KIND=dp), DIMENSION(:) ,POINTER,INTENT(out) :: ch,cg,cgt,cht
    INTEGER::i

    ALLOCATE(ch(-m:m))
    ALLOCATE(cg(-m:m))
    ALLOCATE(cgt(-m:m))
    ALLOCATE(cht(-m:m))

    SELECT CASE(itype)
    CASE(8)

       do i=-m,m
          ch(i)=0.d0
          cht(i)=0.d0
          cg(i)=0.d0
          cgt(i)=0.d0
       enddo

       ! The normalization is chosen such that a constant function remains the same constant 
       ! on each level of the transform

       ch(-7)=-5.d0/2048.d0
       ch(-6)=0.d0
       ch(-5)=49.d0/2048.d0
       ch(-4)=0.d0
       ch(-3)=-245.d0/2048.d0
       ch(-2)=0.d0
       ch(-1)=1225.d0/2048.d0
       ch( 0)=1.d0
       ch( 1)=1225.d0/2048.d0
       ch( 2)=0.d0
       ch( 3)=-245.d0/2048.d0
       ch( 4)=0.d0
       ch( 5)=49.d0/2048.d0
       ch( 6)=0.d0
       ch( 7)=-5.d0/2048.d0
       ! 
       cht( 0)=1.d0

       ! g coefficients from h coefficients
       do i=-m,m-1
          cg(i+1)=cht(-i)*(-1)**(i+1)
          cgt(i+1)=ch(-i)*(-1)**(i+1)
       enddo

    CASE(14)
       ch = (/ &
            0.d0,0.d0,0.d0,0.0000275373458862304687D0,0.D0,-0.000423073768615722656D0,0.D0,&
            0.00310254096984863281D0,0.D0,-0.0146262645721435547D0,0.D0,&
            0.0511919260025024414D0,0.D0,-0.153575778007507324D0,0.D0,0.614303112030029297D0,&
            1.D0,0.614303112030029297D0,0.D0,-0.153575778007507324D0,0.D0,&
            0.0511919260025024414D0,0.D0,-0.0146262645721435547D0,0.D0,&
            0.00310254096984863281D0,0.D0,-0.000423073768615722656D0,0.D0,&
            0.0000275373458862304687D0,0.d0,0.d0,0.d0&
            /)

       do i=-m,m
          cht(i)=0.d0
          cg(i)=0.d0
          cgt(i)=0.d0
       enddo

       ! the normalization is chosen such that a constant function remains the same constant 
       ! on each level of the transform

       cht( 0)=1.D0

       ! g coefficients from h coefficients
       do i=-m,m-1
          cg(i+1)=cht(-i)*(-1)**(i+1)
          cgt(i+1)=ch(-i)*(-1)**(i+1)
       enddo

    CASE(16)
       ch = (/&
            0.d0,0.d0,0.d0,-6.39259815216064453D-6,0.D0,0.000110641121864318848D0,0.D0,&
            -0.000915303826332092285D0,0.D0,0.00484772026538848877D0,0.D0,&
            -0.0186983495950698853D0,0.D0,0.0575909167528152466D0,0.D0,&
            -0.159974768757820129D0,0.D0,0.617045536637306213D0,1.D0,0.617045536637306213D0,&
            0.D0,-0.159974768757820129D0,0.D0,0.0575909167528152466D0,0.D0,&
            -0.0186983495950698853D0,0.D0,0.00484772026538848877D0,0.D0,&
            -0.000915303826332092285D0,0.D0,0.000110641121864318848D0,0.D0,&
            -6.39259815216064453D-6,0.d0,0.d0,0.d0&
            /)

       do i=-m,m
          cht(i)=0.d0
          cg(i)=0.d0
          cgt(i)=0.d0
       enddo

       ! the normalization is chosen such that a constant function remains the same constant 
       ! on each level of the transform

       cht( 0)=1.D0

       ! g coefficients from h coefficients
       do i=-m,m-1
          cg(i+1)=cht(-i)*(-1)**(i+1)
          cgt(i+1)=ch(-i)*(-1)**(i+1)
       enddo

    CASE (20)
       ch = (/ &
            0.d0, 0.d0, 0.d0, &
            -3.53757059201598167d-7,0.d0,7.51213519833981991d-6,0.d0, &
            -0.0000766237790230661631d0,0.d0,0.000501001632073894143d0,0.d0, &
            -0.00236837135162204504d0,0.d0,0.00868402828928083181d0,0.d0,&
            -0.0260520848678424954d0,0.d0,0.0677354206563904881d0,0.d0,&
            -0.16933855164097622d0,0.d0,0.620908022683579475d0,1.d0,0.620908022683579475d0,&
            0.d0,-0.16933855164097622d0,0.d0,0.0677354206563904881d0,0.d0,&
            -0.0260520848678424954d0,0.d0,0.00868402828928083181d0,0.d0,&
            -0.00236837135162204504d0,0.d0,0.000501001632073894143d0,0.d0,&
            -0.0000766237790230661631d0,0.d0,7.51213519833981991d-6,0.d0,&
            -3.53757059201598167d-7, &
            0.d0, 0.d0, 0.d0   /)

       !******** coefficients for wavelet transform *********************
       do i=-m,m
          cht(i)=0.d0
          cg(i)=0.d0
          cgt(i)=0.d0
       enddo

       ! the normalization is chosen such that a constant function remains the same constant 
       ! on each level of the transform

       cht( 0)=1.d0

       ! g coefficients from h coefficients
       do i=-m,m-1
          cg(i+1)=cht(-i)*(-1)**(i+1)
          cgt(i+1)=ch(-i)*(-1)**(i+1)
       enddo

    CASE (24)
       ch = (/ &
            0.d0, 0.d0, 0.d0, &
            -2.00495833269087598d-8,0.d0,5.0505855142546352d-7,0.d0,&
            -6.14044870417274069d-6,0.d0,0.0000480399810385279125d0,0.d0,&
            -0.000272226559218324837d0,0.d0,0.00119360875964957813d0,0.d0,&
            -0.00423188560239395883d0,0.d0,0.0125613112325027032d0,0.d0,&
            -0.032300514597864094d0,0.d0,0.0753678673950162192d0,0.d0,&
            -0.175858357255037845d0,0.d0,0.623497812086043268d0,1.d0,0.623497812086043268d0,&
            0.d0,-0.175858357255037845d0,0.d0,0.0753678673950162192d0,0.d0,&
            -0.032300514597864094d0,0.d0,0.0125613112325027032d0,0.d0,&
            -0.00423188560239395883d0,0.d0,0.00119360875964957813d0,0.d0,&
            -0.000272226559218324837d0,0.d0,0.0000480399810385279125d0,0.d0,&
            -6.14044870417274069d-6,0.d0,5.0505855142546352d-7,0.d0,&
            -2.00495833269087598d-8,&
            0.d0, 0.d0, 0.d0   /)

       !******** coefficients for wavelet transform *********************
       do i=-m,m
          cht(i)=0.d0
          cg(i)=0.d0
          cgt(i)=0.d0
       enddo

       ! the normalization is chosen such that a constant function remains the same constant 
       ! on each level of the transform

       cht( 0)=1.d0

       ! g coefficients from h coefficients
       do i=-m,m-1
          cg(i+1)=cht(-i)*(-1)**(i+1)
          cgt(i+1)=ch(-i)*(-1)**(i+1)
       enddo

    CASE(30)
       ch = (/ &
            0.d0, 0.d0, 0.d0, &
            2.78364831185484718d-10,0.d0,-8.6705490009997277d-9,0.d0, &
            1.31098700895115883d-7,0.d0,-1.28248729136526407d-6,0.d0, &
            9.13008809805271326d-6,0.d0,-0.000050455750015554468d0,0.d0, &
            0.000225566882422478798d0,0.d0,-0.00083996810502084962d0,0.d0, &
            0.0026652834101623113d0,0.d0,-0.00734972091893243418d0,0.d0, &
            0.0179659844685015058d0,0.d0,-0.039898484988490357d0,0.d0, &
            0.0837868184758297496d0,0.d0,-0.18261229667809048d0,0.d0,0.626099302896310217d0, &
            1.d0,0.626099302896310217d0,0.d0,-0.18261229667809048d0,0.d0, &
            0.0837868184758297496d0,0.d0,-0.039898484988490357d0,0.d0, &
            0.0179659844685015058d0,0.d0,-0.00734972091893243418d0,0.d0, &
            0.0026652834101623113d0,0.d0,-0.00083996810502084962d0,0.d0, &
            0.000225566882422478798d0,0.d0,-0.000050455750015554468d0,0.d0, &
            9.13008809805271326d-6,0.d0,-1.28248729136526407d-6,0.d0, &
            1.31098700895115883d-7,0.d0,-8.6705490009997277d-9,0.d0, &
            2.78364831185484718d-10, &
            0.d0, 0.d0, 0.d0   /)

       !******** coefficients for wavelet transform *********************
       do i=-m,m
          cht(i)=0.d0
          cg(i)=0.d0
          cgt(i)=0.d0
       enddo

       ! the normalization is chosen such that a constant function remains the same constant 
       ! on each level of the transform

       cht( 0)=1.d0

       ! g coefficients from h coefficients
       do i=-m,m-1
          cg(i+1)=cht(-i)*(-1)**(i+1)
          cgt(i+1)=ch(-i)*(-1)**(i+1)
       enddo

    CASE(40)
       ch = (/ &
            0.d0, 0.d0, 0.d0, &
            -2.33895335687458837d-13,0.d0,9.61499474542229436d-12,0.d0,&
            -1.9312403731519637d-10,0.d0,2.52621846791090201d-9,0.d0,&
            -2.42028027409528354d-8,0.d0,1.81103730854716044d-7,0.d0,&
            -1.10227332483179024d-6,0.d0,5.61214589957214346d-6,0.d0,&
            -0.0000244006343459658411d0,0.d0,0.0000920510703104425647d0,0.d0,&
            -0.000305221969976730609d0,0.d0,0.000899343879450152758d0,0.d0,&
            -0.00237826492565707063d0,0.d0,0.00569939227746221067d0,0.d0,&
            -0.0125090557778066702d0,0.d0,0.0254814099177543281d0,0.d0,&
            -0.0491427191270976329d0,0.d0,0.0930820915230908105d0,0.d0,&
            -0.189611667917407207d0,0.d0,0.628712372568244948d0,1.d0,0.628712372568244948d0,&
            0.d0,-0.189611667917407207d0,0.d0,0.0930820915230908105d0,0.d0,&
            -0.0491427191270976329d0,0.d0,0.0254814099177543281d0,0.d0,&
            -0.0125090557778066702d0,0.d0,0.00569939227746221067d0,0.d0,&
            -0.00237826492565707063d0,0.d0,0.000899343879450152758d0,0.d0,&
            -0.000305221969976730609d0,0.d0,0.0000920510703104425647d0,0.d0,&
            -0.0000244006343459658411d0,0.d0,5.61214589957214346d-6,0.d0,&
            -1.10227332483179024d-6,0.d0,1.81103730854716044d-7,0.d0,&
            -2.42028027409528354d-8,0.d0,2.52621846791090201d-9,0.d0,&
            -1.9312403731519637d-10,0.d0,9.61499474542229436d-12,0.d0,&
            -2.33895335687458837d-13,&
            0.d0, 0.d0, 0.d0   /)

       !******** coefficients for wavelet transform *********************
       do i=-m,m
          cht(i)=0.d0
          cg(i)=0.d0
          cgt(i)=0.d0
       enddo

       ! the normalization is chosen such that a constant function remains the same constant 
       ! on each level of the transform

       cht( 0)=1.d0

       ! g coefficients from h coefficients
       do i=-m,m-1
          cg(i+1)=cht(-i)*(-1)**(i+1)
          cgt(i+1)=ch(-i)*(-1)**(i+1)
       enddo

    CASE(50)
       !******** coefficients for wavelet transform *********************

       ch(-m:0) = (/ 0.d0, 0.d0, 0.d0, &
            2.03510990661269603d-16,0.d0,-1.03963806080363471d-14,0.d0,&
            2.60602607241444435d-13,0.d0,-4.27267065360972853d-12,0.d0,&
            5.15325765417075794d-11,0.d0,-4.87577454971540944d-10,0.d0,&
            3.76884194923947865d-9,0.d0,-2.44743981275102471d-8,0.d0,&
            1.36277898664545694d-7,0.d0,-6.60874540835592558d-7,0.d0,&
            2.82580838150391301d-6,0.d0,-0.0000107609066649189415d0,0.d0,&
            0.0000368023007940227798d0,0.d0,-0.000113853271687194218d0,0.d0,&
            0.000320647989649649023d0,0.d0,-0.00082693428909646327d0,0.d0,&
            0.00196396893660410027d0,0.d0,-0.00432073166052902059d0,0.d0,&
            0.008863039303649273d0,0.d0,-0.0170899753079935742d0,0.d0,&
            0.0313316213979882195d0,0.d0,-0.0556296135025505121d0,0.d0,&
            0.0991218567863627306d0,0.d0,-0.193934067625492299d0,0.d0,&
            0.630285719782849972d0,1.d0 /)
       ch(1:m) = (/ &
            0.630285719782849972d0,0.d0,-0.193934067625492299d0,0.d0,&
            0.0991218567863627306d0,0.d0,-0.0556296135025505121d0,0.d0,&
            0.0313316213979882195d0,0.d0,-0.0170899753079935742d0,0.d0,&
            0.008863039303649273d0,0.d0,-0.00432073166052902059d0,0.d0,&
            0.00196396893660410027d0,0.d0,-0.00082693428909646327d0,0.d0,&
            0.000320647989649649023d0,0.d0,-0.000113853271687194218d0,0.d0,&
            0.0000368023007940227798d0,0.d0,-0.0000107609066649189415d0,0.d0,&
            2.82580838150391301d-6,0.d0,-6.60874540835592558d-7,0.d0,&
            1.36277898664545694d-7,0.d0,-2.44743981275102471d-8,0.d0,&
            3.76884194923947865d-9,0.d0,-4.87577454971540944d-10,0.d0,&
            5.15325765417075794d-11,0.d0,-4.27267065360972853d-12,0.d0,&
            2.60602607241444435d-13,0.d0,-1.03963806080363471d-14,0.d0,&
            2.03510990661269603d-16,&
            0.d0, 0.d0, 0.d0   /)
       do i=-m,m
          cht(i)=0.d0
          cg(i)=0.d0
          cgt(i)=0.d0
       enddo

       ! the normalization is chosen such that a constant function remains the same constant 
       ! on each level of the transform

       cht( 0)=1.d0

       ! g coefficients from h coefficients
       do i=-m,m-1
          cg(i+1)=cht(-i)*(-1)**(i+1)
          cgt(i+1)=ch(-i)*(-1)**(i+1)
       enddo

    CASE (60)
       !******** coefficients for wavelet transform *********************
       ch(-m:0) = (/ &
            0.d0, 0.d0, 0.d0, &
            -1.80960777804178984d-19,0.d0,1.10513064480060885d-17,0.d0,&
            -3.32141991973710259d-16,0.d0,6.54883738891560793d-15,0.d0,&
            -9.5279163579909433d-14,0.d0,1.09084919935365698d-12,0.d0,&
            -1.02354148279779304d-11,0.d0,8.09410105920413478d-11,0.d0,&
            -5.50587106934234749d-10,0.d0,3.27218841600752522d-9,0.d0,&
            -1.71999647508087864d-8,0.d0,8.07595396530604197d-8,0.d0,&
            -3.41497481961512632d-7,0.d0,1.30947169656570694d-6,0.d0,&
            -4.58013372208926991d-6,0.d0,0.0000146880150398035208d0,0.d0,&
            -0.0000433840444231233622d0,0.d0,0.000118515001353520526d0,0.d0,&
            -0.000300581525171972349d0,0.d0,0.000710396937937769235d0,0.d0,&
            -0.00157035112596770041d0,0.d0,0.00325946830347917649d0,0.d0,&
            -0.00638065613347741822d0,0.d0,0.0118436928230099234d0,0.d0,&
            -0.0209956372771539552d0,0.d0,0.0359258682297967678d0,0.d0,&
            -0.0604028333973506096d0,0.d0,0.103355959368799932d0,0.d0,&
            -0.196868494035809394d0,0.d0,0.631336894666561161d0,1.d0 /)
       ch(1:m) = (/ 0.631336894666561161d0,&
            0.d0,-0.196868494035809394d0,0.d0,0.103355959368799932d0,0.d0,&
            -0.0604028333973506096d0,0.d0,0.0359258682297967678d0,0.d0,&
            -0.0209956372771539552d0,0.d0,0.0118436928230099234d0,0.d0,&
            -0.00638065613347741822d0,0.d0,0.00325946830347917649d0,0.d0,&
            -0.00157035112596770041d0,0.d0,0.000710396937937769235d0,0.d0,&
            -0.000300581525171972349d0,0.d0,0.000118515001353520526d0,0.d0,&
            -0.0000433840444231233622d0,0.d0,0.0000146880150398035208d0,0.d0,&
            -4.58013372208926991d-6,0.d0,1.30947169656570694d-6,0.d0,&
            -3.41497481961512632d-7,0.d0,8.07595396530604197d-8,0.d0,&
            -1.71999647508087864d-8,0.d0,3.27218841600752522d-9,0.d0,&
            -5.50587106934234749d-10,0.d0,8.09410105920413478d-11,0.d0,&
            -1.02354148279779304d-11,0.d0,1.09084919935365698d-12,0.d0,&
            -9.5279163579909433d-14,0.d0,6.54883738891560793d-15,0.d0,&
            -3.32141991973710259d-16,0.d0,1.10513064480060885d-17,0.d0,&
            -1.80960777804178984d-19,&
            0.d0, 0.d0, 0.d0   /)


       do i=-m,m
          cht(i)=0.d0
          cg(i)=0.d0
          cgt(i)=0.d0
       enddo

       ! the normalization is chosen such that a constant function remains the same constant 
       ! on each level of the transform

       cht( 0)=1.d0

       ! g coefficients from h coefficients
       do i=-m,m-1
          cg(i+1)=cht(-i)*(-1)**(i+1)
          cgt(i+1)=ch(-i)*(-1)**(i+1)
       enddo

    CASE(100)
       !******** coefficients for wavelet transform *********************
       ch(-m:-m+22) = (/ &
            0.d0, 0.d0, 0.d0, &
            -1.2683805626484815d-31,0.d0,1.28158741180595538d-29,0.d0,&
            -6.41198417717232202d-28,0.d0,2.11779334023809847d-26,0.d0,&
            -5.19441179715542395d-25,0.d0,1.00911662890805933d-23,0.d0,&
            -1.61729304931893186d-22,0.d0,2.19924673311587861d-21,0.d0,&
            -2.59007672484430282d-20,0.d0,2.68351845030850743d-19,0.d0  /)
       ch(-m+23:0) = (/ &
            -2.47631006363911635d-18,0.d0,2.05560047903738218d-17,0.d0,&
            -1.54763876066192241d-16,0.d0,1.06410357358472536d-15,0.d0,&
            -6.72076683598079057d-15,0.d0,3.91882394735691508d-14,0.d0,&
            -2.1187969775075261d-13,0.d0,1.06630135673478305d-12,0.d0,&
            -5.01180443685748998d-12,0.d0,2.20666419683207691d-11,0.d0,&
            -9.1258654919835045d-11,0.d0,3.55352205999457932d-10,0.d0,&
            -1.30569909741619005d-9,0.d0,4.53620646231137398d-9,0.d0,&
            -1.49279735540769725d-8,0.d0,4.66118357913015673d-8,0.d0,&
            -1.38309751701521672d-7,0.d0,3.90568525175243503d-7,0.d0,&
            -1.05103157937523999d-6,0.d0,2.69873794098621337d-6,0.d0,&
            -6.61998110310293365d-6,0.d0,0.0000155312721433740143d0,0.d0,&
            -0.0000348898934935080536d0,0.d0,0.0000751302114254144957d0,0.d0,&
            -0.000155250095336387829d0,0.d0,0.000308205854288494064d0,0.d0,&
            -0.000588508297900663563d0,0.d0,0.00108221904295030132d0,0.d0,&
            -0.00191926718143360074d0,0.d0,0.00328782888345707184d0,0.d0,&
            -0.00545087420152093489d0,0.d0,0.00876675750345045625d0,0.d0,&
            -0.0137206712673049998d0,0.d0,0.0209859998811194541d0,0.d0,&
            -0.031565718829452402d0,0.d0,0.0471537281279474153d0,0.d0,&
            -0.0711699126403181485d0,0.d0,0.112357606764076737d0,0.d0,&
            -0.202867901101805219d0,0.d0,0.633444670787269357d0,1.d0 /)
       ch(1:80) = (/ 0.633444670787269357d0, &
            0.d0,-0.202867901101805219d0,0.d0,0.112357606764076737d0,0.d0,&
            -0.0711699126403181485d0,0.d0,0.0471537281279474153d0,0.d0,&
            -0.031565718829452402d0,0.d0,0.0209859998811194541d0,0.d0,&
            -0.0137206712673049998d0,0.d0,0.00876675750345045625d0,0.d0,&
            -0.00545087420152093489d0,0.d0,0.00328782888345707184d0,0.d0,&
            -0.00191926718143360074d0,0.d0,0.00108221904295030132d0,0.d0,&
            -0.000588508297900663563d0,0.d0,0.000308205854288494064d0,0.d0,&
            -0.000155250095336387829d0,0.d0,0.0000751302114254144957d0,0.d0,&
            -0.0000348898934935080536d0,0.d0,0.0000155312721433740143d0,0.d0,&
            -6.61998110310293365d-6,0.d0,2.69873794098621337d-6,0.d0,&
            -1.05103157937523999d-6,0.d0,3.90568525175243503d-7,0.d0,&
            -1.38309751701521672d-7,0.d0,4.66118357913015673d-8,0.d0,&
            -1.49279735540769725d-8,0.d0,4.53620646231137398d-9,0.d0,&
            -1.30569909741619005d-9,0.d0,3.55352205999457932d-10,0.d0,&
            -9.1258654919835045d-11,0.d0,2.20666419683207691d-11,0.d0,&
            -5.01180443685748998d-12,0.d0,1.06630135673478305d-12,0.d0,&
            -2.1187969775075261d-13,0.d0,3.91882394735691508d-14,0.d0,&
            -6.72076683598079057d-15,0.d0,1.06410357358472536d-15,0.d0,&
            -1.54763876066192241d-16,0.d0,2.05560047903738218d-17,0.d0,&
            -2.47631006363911635d-18,0.d0 /)
       ch(81:m)= (/ 2.68351845030850743d-19,0.d0,&
            -2.59007672484430282d-20,0.d0,2.19924673311587861d-21,0.d0,&
            -1.61729304931893186d-22,0.d0,1.00911662890805933d-23,0.d0,&
            -5.19441179715542395d-25,0.d0,2.11779334023809847d-26,0.d0,&
            -6.41198417717232202d-28,0.d0,1.28158741180595538d-29,0.d0,&
            -1.2683805626484815d-31,&
            0.d0, 0.d0, 0.d0   /)


       do i=-m,m
          cht(i)=0.d0
          cg(i)=0.d0
          cgt(i)=0.d0
       enddo

       ! the normalization is chosen such that a constant function remains the same constant 
       ! on each level of the transform

       cht( 0)=1.d0

       ! g coefficients from h coefficients
       do i=-m,m-1
          cg(i+1)=cht(-i)*(-1)**(i+1)
          cgt(i+1)=ch(-i)*(-1)**(i+1)
       enddo

    END SELECT

  END SUBROUTINE lazy_arrays
END MODULE lazy
