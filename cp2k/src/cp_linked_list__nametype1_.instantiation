[
{
 'nametype1':'int',
 'type1':'integer',
 'type1in':'integer, intent(in)',
 'type1out':'integer, intent(out)',
 'use':'use cp_array_i_utils, only: cp_i_write',
 'defines':
"""#define CP_SLL_I_LESS_Q(el1,el2) ( el1 < el2 )
#define CP_SLL_I_EQUAL_Q(el1,el2) ( el1 == el2 )
""",
 '=':'=',
 'type1arrayEl':'integer',
 'array=':'=',
 'arrayEl':'',
 'lessQ':'CP_SLL_I_LESS_Q',
 'equalQ':'CP_SLL_I_EQUAL_Q',
 'write_el':'cp_i_write'
},

{
 'nametype1':'int_ptr', 
 'type1':'integer, pointer', 
 'type1in':'integer, intent(in),target',
 'type1out':'integer, pointer',
 'use':'use cp_array_i_utils, only: cp_i_write',
 'defines':
"""#define CP_SLL_I_LESS_Q(el1,el2) ( el1 < el2 )
#define CP_SLL_I_EQUAL_Q(el1,el2) ( el1 == el2 )
""",
 '=':'=>',
 'type1arrayEl':'integer',
 'array=':'=',
 'arrayEl':'',
 'lessQ':'CP_SLL_I_LESS_Q',
 'equalQ':'CP_SLL_I_EQUAL_Q',
 'write_el':'cp_i_write' # careful:no check for unassociated pointers!
}
#,
#
#{
# 'nametype1':'sv_block', 
# 'type1':'type(cp_sv_block_type)', 
# 'type1in':'type(cp_sv_block_type), intent(in)',
# 'type1out':'type(cp_sv_block_type), intent(inout)',
# 'use':'use cp_sv_block, only: cp_sv_block_type, cp_sv_block_write',
# 'defines':
#"""#define CP_SLL_SV_LESS_Q(el1,el2) ( el1 %block_nr < el2 %block_nr )
##define CP_SLL_SV_EQUAL_Q(el1,el2) ( el1 %block_nr == el2 %block_nr )
#""",
# '=':'=',
# 'type1arrayEl':'type(cp_sv_block_type)',
# 'array=':'=',
# 'arrayEl':'',
# 'lessQ':'CP_SLL_SV_LESS_Q',
# 'equalQ':'CP_SLL_SV_EQUAL_Q',
# 'write_el':'cp_sv_block_write'
#}
]